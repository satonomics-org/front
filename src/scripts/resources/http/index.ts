import { computeBackEndURL, retryingFetch } from '/src/scripts'

import { createBackEndResource, createResourceHTTP } from './base'

export const createResourcesHTTP = () => ({
  candlesticks: createResourceHTTP<FetchedCandlestick[]>({
    url: computeBackEndURL('/ohlcv'),
    customFetch: retryingFetch,
  }),
  sthRealizedPrice: createBackEndResource(`/sth-realized-price`),
  lthRealizedPrice: createBackEndResource(`/lth-realized-price`),
  oneMonthRealizedPrice: createBackEndResource(`/1m-realized-price`),
  threeMonthsRealizedPrice: createBackEndResource(`/3m-realized-price`),
  sixMonthsRealizedPrice: createBackEndResource(`/6m-realized-price`),
  oneYearRealizedPrice: createBackEndResource(`/1y-realized-price`),
  twoYearsRealizedPrice: createBackEndResource(`/2y-realized-price`),
  netRealizedProfitAndLoss: createBackEndResource(`/net-realized-pnl`),
  sopr: createBackEndResource(`/sopr`),
  planktonRealizedPrice: createBackEndResource(`/plankton-realized-price`),
  shrimpsRealizedPrice: createBackEndResource(`/shrimps-realized-price`),
  crabsRealizedPrice: createBackEndResource(`/crabs-realized-price`),
  fishRealizedPrice: createBackEndResource(`/fish-realized-price`),
  sharksRealizedPrice: createBackEndResource(`/sharks-realized-price`),
  whalesRealizedPrice: createBackEndResource(`/whales-realized-price`),
  humpbacksRealizedPrice: createBackEndResource(`/humpbacks-realized-price`),
  planktonBalances: createBackEndResource(`/plankton-balances`),
  shrimpsBalances: createBackEndResource(`/shrimps-balances`),
  crabsBalances: createBackEndResource(`/crabs-balances`),
  fishBalances: createBackEndResource(`/fish-balances`),
  sharksBalances: createBackEndResource(`/sharks-balances`),
  whalesBalances: createBackEndResource(`/whales-balances`),
  humpbacksBalances: createBackEndResource(`/humpbacks-balances`),
  planktonDistribution: createBackEndResource(`/plankton-distribution`),
  shrimpsDistribution: createBackEndResource(`/shrimps-distribution`),
  crabsDistribution: createBackEndResource(`/crabs-distribution`),
  fishDistribution: createBackEndResource(`/fish-distribution`),
  sharksDistribution: createBackEndResource(`/sharks-distribution`),
  whalesDistribution: createBackEndResource(`/whales-distribution`),
  humpbacksDistribution: createBackEndResource(`/humpbacks-distribution`),
  terminalPrice: createBackEndResource(`/terminal-price`),
  realizedPrice: createBackEndResource(`/realized-price`),
  balancedPrice: createBackEndResource(`/balanced-price`),
  cointimePrice: createBackEndResource(`/cointime-price`),
  trueMeanPrice: createBackEndResource(`/true-mean-price`),
  vaultedPrice: createBackEndResource(`/vaulted-price`),
  cvdd: createBackEndResource(`/cvdd`),
  fundingRates: createBackEndResource(`/funding-rates`),
  vddMultiple: createBackEndResource(`/vdd-multiple`),
  minersRevenue: createBackEndResource(`/miners-revenue`),
  supplyInProfit: createBackEndResource(`/supply-in-profit`),
  supplyInLoss: createBackEndResource(`/supply-in-loss`),
  lthSupply: createBackEndResource(`/lth-supply`),
  sthSupply: createBackEndResource(`/sth-supply`),
  lthInProfit: createBackEndResource(`/lth-in-profit`),
  sthInProfit: createBackEndResource(`/sth-in-profit`),
  lthInLoss: createBackEndResource(`/lth-in-loss`),
  sthInLoss: createBackEndResource(`/sth-in-loss`),
  hashRate: createBackEndResource(`/hash-rate`),
  goldPrice: createBackEndResource(`/gold-price`),
  totalMarketCap: createBackEndResource(`/total-marketcap`),
  altcoinsMarketCap: createBackEndResource(`/altcoins-marketcap`),
  bitcoinMarketCap: createBackEndResource(`/bitcoin-marketcap`),
  ethereumMarketCap: createBackEndResource(`/ethereum-marketcap`),
  usdtMarketCap: createBackEndResource(`/usdt-marketcap`),
  usdcMarketCap: createBackEndResource(`/usdc-marketcap`),
  tusdMarketCap: createBackEndResource(`/tusd-marketcap`),
  busdMarketCap: createBackEndResource(`/busd-marketcap`),
  daiMarketCap: createBackEndResource(`/dai-marketcap`),
  fraxMarketCap: createBackEndResource(`/frax-marketcap`),
  usddMarketCap: createBackEndResource(`/usdd-marketcap`),
  ustMarketCap: createBackEndResource(`/ust-marketcap`),
  pyusdMarketCap: createBackEndResource(`/pyusd-marketcap`),
})
