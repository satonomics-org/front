classDiagram
class JSONBaseDataLabelsGroup~From, T~ {
  <<interface>>
  version: 1
  from: From
  choices: JSONSelectableList#60;JSONDataLabel#60;T#62;#62;
}



class JSONBaseDataLabels {
  <<interface>>
  version: 1
  table: JSONSelectableList#60;JSONTableDataLabelsParameters#62;
}



class BaseDataLabels {
  <<interface>>
  groups: SelectableList#60;AnyBaseDataLabelsGroup, BaseDataLabelsGroups#62;
  table: SelectableList#60;BaseTableDataLabelsParameters#62;
  getList: #40;from: DataLabelsFrom#41; =#62; DataLabel#60;string, string#62;[]
  findIn: #40;     from: DataLabelsFrom,     name: string,     category?: DataCategory   #41; =#62; DataLabel#60;string, string#62; | undefined
  pushTo: #40;     from: DataLabelsFrom,     label: DataLabel   #41; =#62; DataLabel#60;string, string#62; | undefined
}
BaseDataLabels <.. AnyBaseDataLabelsGroup
BaseDataLabels <.. BaseDataLabelsGroups
BaseDataLabels <.. BaseTableDataLabelsParameters


class BaseDataLabelsGroups {
  <<type>>
  [   BaseDropDataLabelsGroup#60;BaseDropIndex#62;,   BaseTestDataLabelsGroup,   BaseZoneDataLabelsGroup ]
}
BaseDataLabelsGroups <.. BaseDropDataLabelsGroup~Drop~
BaseDataLabelsGroups <.. BaseDropIndex
BaseDataLabelsGroups <.. BaseTestDataLabelsGroup
BaseDataLabelsGroups <.. BaseZoneDataLabelsGroup


class AnyBaseDataLabelsGroup {
  <<type>>
  BaseDataLabelsGroups[number]
}
AnyBaseDataLabelsGroup <.. BaseDataLabelsGroups


class BaseDataLabelsGroup~From~ {
  <<interface>>
  from: From
  choices: SelectableList#60;DataLabel#60;string#62;#62;
  saveableChoices: DataLabel#60;string#62;[]
}



class BaseDropDataLabelsGroup~Drop~ {
  <<interface>>
  indexes: SelectableList#60;Drop#62;
}



class BaseTestDataLabelsGroup {
  <<interface>>

}



class BaseZoneDataLabelsGroup {
  <<interface>>

}



class BaseTableDataLabelsParameters {
  <<interface>>
  group: AnyBaseDataLabelsGroup
  dataLabels: DataLabel#60;string#62;[]
  index?: BaseDropIndex
}
BaseTableDataLabelsParameters <.. AnyBaseDataLabelsGroup
BaseTableDataLabelsParameters <.. BaseDropIndex


class JSONMinidynDataLabelsGroup {
  <<type>>
  JSONMinidynDataLabelsGroups[number]
}
JSONMinidynDataLabelsGroup <.. JSONMinidynDataLabelsGroups


class JSONMinidynDataLabelsGroups {
  <<type>>
  [   JSONMinidynDropDataLabelsGroup,   JSONMinidynTestDataLabelsGroup,   JSONMinidynZoneDataLabelsGroup ]
}
JSONMinidynDataLabelsGroups <.. JSONMinidynDropDataLabelsGroup
JSONMinidynDataLabelsGroups <.. JSONMinidynTestDataLabelsGroup
JSONMinidynDataLabelsGroups <.. JSONMinidynZoneDataLabelsGroup


class AnyJSONMinidynDropDataLabelsGroup {
  <<type>>
  JSONMinidynDropDataLabelsGroup
}
AnyJSONMinidynDropDataLabelsGroup <.. JSONMinidynDropDataLabelsGroup


class JSONMinidynDropDataLabelsGroup {
  <<interface>>
  version: 1
  base: JSONBaseDataLabelsGroup#60;'Drop', MinidynUnitsNames#62;
  distinct: JSONMinidynDropDataLabelsGroupDistinct
}
JSONMinidynDropDataLabelsGroup <.. JSONBaseDataLabelsGroup~From, T~
JSONMinidynDropDataLabelsGroup <.. MinidynUnitsNames
JSONMinidynDropDataLabelsGroup <.. JSONMinidynDropDataLabelsGroupDistinct


class JSONMinidynDropDataLabelsGroupDistinct {
  <<interface>>
  version: 1
  indexes: JSONSelectableList#60;JSONMinidynDropIndex#62;
}
JSONMinidynDropDataLabelsGroupDistinct <.. JSONMinidynDropIndex


class JSONMinidynTestDataLabelsGroup {
  <<interface>>
  version: 1
  base: JSONBaseDataLabelsGroup#60;'Point', MinidynUnitsNames#62;
  distinct: JSONMinidynTestDataLabelsGroupDistinct
}
JSONMinidynTestDataLabelsGroup <.. JSONBaseDataLabelsGroup~From, T~
JSONMinidynTestDataLabelsGroup <.. MinidynUnitsNames
JSONMinidynTestDataLabelsGroup <.. JSONMinidynTestDataLabelsGroupDistinct


class JSONMinidynTestDataLabelsGroupDistinct {
  <<interface>>
  version: 1
}



class JSONMinidynZoneDataLabelsGroup {
  <<interface>>
  version: 1
  base: JSONBaseDataLabelsGroup#60;'Zone', MinidynUnitsNames#62;
  distinct: JSONMinidynZoneDataLabelsGroupDistinct
}
JSONMinidynZoneDataLabelsGroup <.. JSONBaseDataLabelsGroup~From, T~
JSONMinidynZoneDataLabelsGroup <.. MinidynUnitsNames
JSONMinidynZoneDataLabelsGroup <.. JSONMinidynZoneDataLabelsGroupDistinct


class JSONMinidynZoneDataLabelsGroupDistinct {
  <<interface>>
  version: 1
}



class MinidynDataLabels {
  <<interface>>
  groups: SelectableList#60;     MinidynDataLabelsGroup,     MinidynDataLabelsGroups   #62;
}
MinidynDataLabels <.. MinidynDataLabelsGroup
MinidynDataLabels <.. MinidynDataLabelsGroups
BaseDataLabels <|-- MinidynDataLabels

class MinidynDataLabelsGroup {
  <<type>>
  MinidynDataLabelsGroups[number]
}
MinidynDataLabelsGroup <.. MinidynDataLabelsGroups


class MinidynDataLabelsGroups {
  <<type>>
  [   MinidynDropDataLabelsGroup,   MinidynTestDataLabelsGroup,   MinidynZoneDataLabelsGroup ]
}
MinidynDataLabelsGroups <.. MinidynDropDataLabelsGroup
MinidynDataLabelsGroups <.. MinidynTestDataLabelsGroup
MinidynDataLabelsGroups <.. MinidynZoneDataLabelsGroup


class MinidynDropDataLabelsGroup {
  <<interface>>
  indexes: SelectableList#60;MinidynDropIndex#62;
  toJSON: #40;#41; =#62; JSONMinidynDropDataLabelsGroup
}
MinidynDropDataLabelsGroup <.. MinidynDropIndex


class MinidynTestDataLabelsGroup {
  <<interface>>
  toJSON: #40;#41; =#62; JSONMinidynTestDataLabelsGroup
}

BaseTestDataLabelsGroup <|-- MinidynTestDataLabelsGroup

class MinidynZoneDataLabelsGroup {
  <<interface>>
  toJSON: #40;#41; =#62; JSONMinidynZoneDataLabelsGroup
}

BaseZoneDataLabelsGroup <|-- MinidynZoneDataLabelsGroup

class JSONBaseDropVAny {
  <<type>>
  JSONBaseDrop
}
JSONBaseDropVAny <.. JSONBaseDrop


class JSONBaseDrop {
  <<interface>>
  version: 1
  index: number
  data: JSONDataValue[]
}



class JSONBaseDropIndexVAny {
  <<type>>
  JSONBaseDropIndex
}
JSONBaseDropIndexVAny <.. JSONBaseDropIndex


class JSONBaseDropIndex {
  <<interface>>
  version: 1
  displayedIndex: number
}



class BaseDrop~DropIndex, Point~ {
  <<interface>>
  index: DropIndex
  data: DataValue#60;string#62;[]
  point: Point
  impactData: ImpactData | null
}



class BaseDropIndex {
  <<interface>>
  displayedIndex: number
}



class JSONMinidynDropVAny {
  <<type>>
  JSONMinidynDrop
}
JSONMinidynDropVAny <.. JSONMinidynDrop


class JSONMinidynDrop {
  <<interface>>
  version: 1
  base: JSONBaseDrop
  distinct: JSONMinidynDropDistinct
}
JSONMinidynDrop <.. JSONBaseDrop
JSONMinidynDrop <.. JSONMinidynDropDistinct


class JSONMinidynDropDistinct {
  <<interface>>
  version: 1
}



class JSONMinidynDropIndexVAny {
  <<type>>
  JSONMinidynDropIndex
}
JSONMinidynDropIndexVAny <.. JSONMinidynDropIndex


class JSONMinidynDropIndex {
  <<interface>>
  version: 1
  base: JSONBaseDropIndex
  distinct: JSONMinidynDropIndexDistinct
}
JSONMinidynDropIndex <.. JSONBaseDropIndex
JSONMinidynDropIndex <.. JSONMinidynDropIndexDistinct


class JSONMinidynDropIndexDistinct {
  <<interface>>
  version: 1
  type: MinidynDropType
}
JSONMinidynDropIndexDistinct <.. MinidynDropType


class MinidynDropType {
  <<type>>
  'Training' | 'Averaging'
}



class MinidynDrop {
  <<interface>>

}



class MinidynDropIndex {
  <<interface>>
  type: MinidynDropType
}
MinidynDropIndex <.. MinidynDropType
BaseDropIndex <|-- MinidynDropIndex

class Line {
  <<interface>>
  sortedPoints: BasePoint[]
  addToMap: #40;#41; =#62; void
  update: #40;#41; =#62; void
  remove: #40;#41; =#62; void
}
Line <.. BasePoint~Drop, Zone~


class MinidynUnitsSkeleton~A, B, C, D, E, F, G~ {
  <<interface>>
  modulus: A
  stiffness: B
  deflection: C
  force: D
  distance: E
  time: F
  percentage: G
}



class PossibleMinidynModulusUnits {
  <<type>>
  'MPa'
}



class PossibleMinidynStiffnessUnits {
  <<type>>
  'MN / m'
}



class PossibleMinidynDeflectionUnits {
  <<type>>
  'mm' | 'um'
}



class PossibleMinidynForceUnits {
  <<type>>
  'N' | 'kN'
}



class PossibleMinidynDistanceUnits {
  <<type>>
  'm' | 'km' | 'mi'
}



class PossibleMinidynTimeUnits {
  <<type>>
  's' | 'ms' | 'us'
}



class PossibleMinidynPercentageUnits {
  <<type>>
  '%'
}



class JSONMinidynUnitsVAny {
  <<type>>
  JSONMinidynUnits
}
JSONMinidynUnitsVAny <.. JSONMinidynUnits


class JSONMinidynUnits {
  <<type>>
  #123; version: 1 #125; & MinidynUnitsSkeleton#60;   JSONMathUnit#60;PossibleMinidynModulusUnits#62;,   JSONMathUnit#60;PossibleMinidynStiffnessUnits#62;,   JSONMathUnit#60;PossibleMinidynDeflectionUnits#62;,   JSONMathUnit#60;PossibleMinidynForceUnits#62;,   JSONMathUnit#60;PossibleMinidynDistanceUnits#62;,   JSONMathUnit#60;PossibleMinidynTimeUnits#62;,   JSONMathUnit#60;PossibleMinidynPercentageUnits#62; #62;
}
JSONMinidynUnits <.. MinidynUnitsSkeleton~A, B, C, D, E, F, G~
JSONMinidynUnits <.. PossibleMinidynModulusUnits
JSONMinidynUnits <.. PossibleMinidynStiffnessUnits
JSONMinidynUnits <.. PossibleMinidynDeflectionUnits
JSONMinidynUnits <.. PossibleMinidynForceUnits
JSONMinidynUnits <.. PossibleMinidynDistanceUnits
JSONMinidynUnits <.. PossibleMinidynTimeUnits
JSONMinidynUnits <.. PossibleMinidynPercentageUnits


class MinidynMathUnits {
  <<type>>
  MinidynUnitsSkeleton#60;   MathUnit#60;PossibleMinidynModulusUnits#62;,   MathUnit#60;PossibleMinidynStiffnessUnits#62;,   MathUnit#60;PossibleMinidynDeflectionUnits#62;,   MathUnit#60;PossibleMinidynForceUnits#62;,   MathUnit#60;PossibleMinidynDistanceUnits#62;,   MathUnit#60;PossibleMinidynTimeUnits#62;,   MathUnit#60;PossibleMinidynPercentageUnits#62; #62;
}
MinidynMathUnits <.. MinidynUnitsSkeleton~A, B, C, D, E, F, G~
MinidynMathUnits <.. PossibleMinidynModulusUnits
MinidynMathUnits <.. PossibleMinidynStiffnessUnits
MinidynMathUnits <.. PossibleMinidynDeflectionUnits
MinidynMathUnits <.. PossibleMinidynForceUnits
MinidynMathUnits <.. PossibleMinidynDistanceUnits
MinidynMathUnits <.. PossibleMinidynTimeUnits
MinidynMathUnits <.. PossibleMinidynPercentageUnits


class MinidynUnitsNames {
  <<type>>
  keyof MinidynUnitsSkeleton#60;any#62;
}
MinidynUnitsNames <.. MinidynUnitsSkeleton~A, B, C, D, E, F, G~


class JSONBasePointVAny {
  <<type>>
  JSONBasePoint
}
JSONBasePointVAny <.. JSONBasePoint


class JSONBasePoint {
  <<interface>>
  version: 1
  id: string
  number: number
  index: number
  date: string
  coordinates: mapboxgl.LngLatLike
  data: JSONDataValue[]
  settings: JSONPointSettings
  information: JSONField[]
  drops: JSONMachineDrop[]
}



class BasePoint~Drop, Zone~ {
  <<interface>>
  id: string
  date: Date
  marker: mapboxgl.Marker | null
  icon: Icon | null
  settings: JSONPointSettings
  data: DataValue#60;string#62;[]
  information: Field[]
  drops: Drop[]
  index: number
  number: number
  zone: Zone
  rawDataFile: ArrayBufferLike | null
  getSelectedMathNumber: #40;     groupFrom: DataLabelsFrom,     dataLabel: DataLabel#60;string#62;,     index?: BaseDropIndex | null   #41; =#62; MathNumber | undefined
  getDisplayedString: #40;     groupFrom: DataLabelsFrom,     dataLabel: DataLabel#60;string#62;,     index?: BaseDropIndex | null   #41; =#62; string
  updateColor: #40;#41; =#62; void
  updateText: #40;#41; =#62; void
  updateVisibility: #40;#41; =#62; void
  updatePopup: #40;#41; =#62; void
  addToMap: #40;#41; =#62; void
  checkVisibility: #40;#41; =#62; boolean
  remove: #40;#41; =#62; void
}



class JSONMinidynPointVAny {
  <<type>>
  JSONMinidynPoint
}
JSONMinidynPointVAny <.. JSONMinidynPoint


class JSONMinidynPoint {
  <<interface>>
  version: 1
  base: JSONBasePoint
  distinct: JSONMinidynPointDistinct
}
JSONMinidynPoint <.. JSONBasePoint
JSONMinidynPoint <.. JSONMinidynPointDistinct


class JSONMinidynPointDistinct {
  <<interface>>
  version: 1
}



class MinidynPoint {
  <<interface>>

}



class JSONBaseProjectVAny {
  <<type>>
  JSONBaseProject
}
JSONBaseProjectVAny <.. JSONBaseProject


class JSONBaseProject {
  <<interface>>
  version: 1
  name: string
  reports: JSONSelectableList#60;JSONMachineReport#62;
  settings: JSONProjectSettings
  overlays: JSONOverlay[]
  information: JSONField[]
  hardware: JSONField[]
  acquisitionParameters: JSONAcquisitionParameters
}



class BaseProject~Report, MathUnits~ {
  <<interface>>
  name: Field
  information: Field[]
  hardware: Field[]
  reports: SelectableList#60;Report#62;
  units: MathUnits
  settings: BaseProjectSettings
  overlays: Overlay[]
  acquisitionParameters: JSONAcquisitionParameters
  refreshLinesAndOverlays: #40;#41; =#62; void
  setMapStyle: #40;styleIndex: number#41; =#62; void
  fitOnMap: #40;#41; =#62; void
  addToMap: #40;#41; =#62; void
  remove: #40;#41; =#62; void
}
BaseProject~Report, MathUnits~ <.. BaseProjectSettings


class BaseProjectSettings {
  <<interface>>
  arePointsLocked: boolean
}



class JSONMinidynProjectVAny {
  <<type>>
  JSONMinidynProject
}
JSONMinidynProjectVAny <.. JSONMinidynProject


class JSONMinidynProject {
  <<interface>>
  version: 1
  machine: 'Minidyn'
  base: JSONBaseProject
  distinct: JSONMinidynProjectDistinct
}
JSONMinidynProject <.. JSONBaseProject
JSONMinidynProject <.. JSONMinidynProjectDistinct


class JSONMinidynProjectDistinct {
  <<interface>>
  version: 1
  units: JSONMinidynUnits
  bearingParameters: JSONBearingParameters
}
JSONMinidynProjectDistinct <.. JSONMinidynUnits


class MinidynProject {
  <<interface>>
  bearingParameters: JSONBearingParameters
}



class JSONBaseReportVAny {
  <<type>>
  JSONBaseReport
}
JSONBaseReportVAny <.. JSONBaseReport


class JSONBaseReport {
  <<interface>>
  version: 1
  name: string
  zones: JSONMachineZone[]
  settings: JSONReportSettings
  screenshots: number[]
  platform: JSONField[]
  information: JSONField[]
  dataLabels: JSONBaseDataLabels
  thresholds: JSONBaseThresholdsSettings
}
JSONBaseReport <.. JSONBaseDataLabels
JSONBaseReport <.. JSONBaseThresholdsSettings


class JSONBaseThresholdsSettings {
  <<interface>>
  version: 1
  colors: JSONThresholdColors
  inputs: JSONThresholdInputs
}



class BaseReport~Project, Zone, DataLabels, Thresholds~ {
  <<interface>>
  name: Field
  line: Line
  zones: Zone[]
  screenshots: string[]
  dataLabels: DataLabels
  thresholds: Thresholds
  settings: JSONReportSettings
  platform: Field[]
  information: Field[]
  project: Project
  isOnMap: boolean
  fitOnMap: #40;#41; =#62; void
  addToMap: #40;#41; =#62; void
  remove: #40;#41; =#62; void
}
BaseReport~Project, Zone, DataLabels, Thresholds~ <.. Line


class JSONMinidynReportVAny {
  <<type>>
  JSONMinidynReport
}
JSONMinidynReportVAny <.. JSONMinidynReport


class JSONMinidynReport {
  <<interface>>
  version: 1
  base: JSONBaseReport
  distinct: JSONMinidynReportDistinct
}
JSONMinidynReport <.. JSONBaseReport
JSONMinidynReport <.. JSONMinidynReportDistinct


class JSONMinidynReportDistinct {
  <<interface>>
  version: 1
  dataLabels: JSONSelectableList#60;     JSONMinidynDataLabelsGroup,     JSONMinidynDataLabelsGroups   #62;
  thresholds: JSONMinidynThresholdsConfigurations
}
JSONMinidynReportDistinct <.. JSONMinidynDataLabelsGroup
JSONMinidynReportDistinct <.. JSONMinidynDataLabelsGroups
JSONMinidynReportDistinct <.. JSONMinidynThresholdsConfigurations


class MinidynReport {
  <<interface>>
  addZone: #40;#41; =#62; void
}



class BaseThresholds~ThresholdsGroups~ {
  <<interface>>
  groups: ThresholdsGroups
  colors: JSONThresholdColors
  inputs: JSONThresholdInputs
}



class BaseThresholdsGroups {
  <<type>>
  MachineUnitsSkeleton#60;ThresholdsGroup#60;string#62;#62;
}



class MinidynThresholds {
  <<interface>>

}



class MinidynThresholdsGroups {
  <<type>>
  MinidynUnitsSkeleton#60;ThresholdsGroup#60;string#62;#62;
}
MinidynThresholdsGroups <.. MinidynUnitsSkeleton~A, B, C, D, E, F, G~


class JSONMinidynThresholdsConfigurationsVAny {
  <<type>>
  JSONMinidynThresholdsConfigurations
}
JSONMinidynThresholdsConfigurationsVAny <.. JSONMinidynThresholdsConfigurations


class JSONMinidynThresholdsConfigurations {
  <<type>>
  #123;   version: 1 #125; & MinidynUnitsSkeleton#60;JSONDistinctThresholdsConfiguration#62;
}
JSONMinidynThresholdsConfigurations <.. MinidynUnitsSkeleton~A, B, C, D, E, F, G~


class MinidynObject~T~ {
  <<interface>>

}



class BaseObject~T~ {
  <<interface>>
  toBaseJSON: #40;#41; =#62; T
}



class JSONBaseZoneVAny {
  <<type>>
  JSONBaseZone
}
JSONBaseZoneVAny <.. JSONBaseZone


class JSONBaseZone {
  <<interface>>
  version: 1
  name: string
  points: JSONMachinePoint[]
  settings: JSONZoneSettings
}



class BaseZone~Point, Report~ {
  <<interface>>
  points: Point[]
  settings: JSONZoneSettings
  name: string
  report: Report
  data: DataValue#60;string#62;[]
  init: #40;#41; =#62; void
  clean: #40;#41; =#62; void
}



class MinidynZoneCreatorParameters {
  <<interface>>
  report: MinidynReport
}
MinidynZoneCreatorParameters <.. MinidynReport


class JSONMinidynZoneVAny {
  <<type>>
  JSONMinidynZone
}
JSONMinidynZoneVAny <.. JSONMinidynZone


class JSONMinidynZone {
  <<interface>>
  version: 1
  base: JSONBaseZone
  distinct: JSONMinidynZoneDistinct
}
JSONMinidynZone <.. JSONBaseZone
JSONMinidynZone <.. JSONMinidynZoneDistinct


class JSONMinidynZoneDistinct {
  <<interface>>
  version: 1
}



class MinidynZone {
  <<interface>>

}



class MinidynExporter {
  <<interface>>
  export: #40;project: MinidynProject#41; =#62; Promise#60;File#62;
}



